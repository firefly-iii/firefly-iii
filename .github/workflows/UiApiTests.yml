name: UI Tests on Pull Request

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Firefly III repository (PR code)
        uses: actions/checkout@v4

      - name: Checkout Firefly-UI (tests repo)
        uses: actions/checkout@v4
        with:
          repository: tmeraslan/firefly-UI
          path: firefly-UI

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # מתקינים Chrome יציב בלי apt-key / מראות ידניות
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          cd firefly-UI
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # נבטיח Selenium חדש כדי להשתמש ב-Selenium Manager
          pip install "selenium>=4.13" pillow pytest

      - name: Run Selenium UI tests (headless)
        env:
          CI: "true"
          HEADLESS: "true"
          # כתובת ה-FF שרץ חיצונית. אם תרצה להריץ Docker ב-CI – תגיד ואכין compose.
          FIREFLY_URL: "http://108.129.187.158:8080"
          EMAIL: ${{ secrets.FIREFLY_EMAIL }}
          PASSWORD: ${{ secrets.FIREFLY_PASSWORD }}
        run: |
          cd firefly-UI
          # אם בקוד שלך יש בדיקה ל-HEADLESS, השורה הזו תפעיל מצב ראש-ללא
          pytest tests/ -v --disable-warnings

      # אופציונלי: להעלות artifacts (לוגים/צילומי מסך) במידה והטסטים שומרים לקובץ
      - name: Upload test artifacts (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-artifacts
          path: |
            firefly-UI/reports/**
            firefly-UI/screenshots/**
          if-no-files-found: ignore
